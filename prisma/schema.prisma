// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "windows"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Service {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String
  price       Float
  duration    Int      // Thời gian (phút)
  image       String?
  isActive    Boolean  @default(true)
  translations ServiceTranslation[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ServiceTranslation {
  id          Int      @id @default(autoincrement())
  serviceId   Int
  language    String   // vi, zh, ko, ru
  name        String
  description String
  service     Service  @relation(fields: [serviceId], references: [id], onDelete: Cascade)
  
  @@unique([serviceId, language])
}

model Category {
  id          Int      @id @default(autoincrement())
  name        String
  slug        String   @unique
  description String?
  posts       Post[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  slug        String   @unique
  content     String
  excerpt     String
  image       String?
  isPublished Boolean  @default(false)
  author      String?
  categoryId  Int?
  category    Category? @relation(fields: [categoryId], references: [id])
  translations PostTranslation[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  publishedAt DateTime?
}

model PostTranslation {
  id          Int      @id @default(autoincrement())
  postId      Int
  language    String   // vi, zh, ko, ru
  title       String
  content     String
  excerpt     String
  post        Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  
  @@unique([postId, language])
}

model Review {
  id          Int      @id @default(autoincrement())
  name        String
  rating      Int      @default(5)
  comment     String
  isActive    Boolean  @default(true)
  translations ReviewTranslation[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model ReviewTranslation {
  id          Int      @id @default(autoincrement())
  reviewId    Int
  language    String   // vi, zh, ko, ru
  comment     String
  review      Review   @relation(fields: [reviewId], references: [id], onDelete: Cascade)
  
  @@unique([reviewId, language])
}

model Contact {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  phone       String?
  message     String
  isRead      Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  email       String   @unique
  password    String
  role        String   @default("user") // user, admin
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model SiteSettings {
  id          Int      @id @default(autoincrement())
  key         String   @unique
  value       String
  translations SettingsTranslation[]
}

model SettingsTranslation {
  id          Int      @id @default(autoincrement())
  settingId   Int
  language    String   // vi, zh, ko, ru
  value       String
  setting     SiteSettings @relation(fields: [settingId], references: [id], onDelete: Cascade)
  
  @@unique([settingId, language])
}
